#!/usr/bin/perl

use strict;
use warnings;

use CGI qw ( -utf8 );
use C4::Auth qw/check_api_auth/;
use C4::Koha qw( GetAuthorisedValues );
use XML::Simple;

my $query = new CGI;
binmode STDOUT, ':encoding(UTF-8)';

my ($status, $cookie, $sessionID) = check_api_auth($query, { editcatalogue => 'edit_catalogue'} );
unless ($status eq "ok") {
  print $query->header(-type => 'text/xml', -status => '403 Forbidden');
  print XMLout({ status => $status }, NoAttr => 1, RootName => 'response', XMLDecl => 1);
  exit 0;
}

#my $category = $query->param('category');

#Get LOC, OPEN_LOC, PAGING_LOC
my $loc = GetAuthorisedValues('LOC');
unless ($loc) {
  print $query->header(-type => 'text/xml', -status => '404 Not found');
  print XMLout({ error_code => 'NO_LOC_FOUND' }, NoAttr => 1, RootName => 'response', XMLDecl => 1);
  exit 0;
}
my $value = GetAuthorisedValues('LOC');
# print the array
print $value
# loop over the array and compose a new one.
# wont work with push, we have to interlace the data
my $open_loc = GetAuthorisedValues('OPEN_LOC');
my $paging_loc = GetAuthorisedValues('PAGING_LOC');

push($value, $paging_loc);
push($value, $open_loc);

print $query->header(-type => 'text/xml',-charset => 'utf-8');
print XMLout({ value => $value }, NoAttr => 1, RootName => 'response', XMLDecl => 1);

# response
#   value
#     authorised_value
#     open_loc {1,0} #true, false
#     paging_loc {1,0}

exit 0;
